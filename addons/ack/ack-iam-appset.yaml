---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: addons-ack-iam
spec:
  goTemplate: true
  syncPolicy:
    preserveResourcesOnDeletion: true
  generators:
    - clusters:
        values:
          addonChart: iam-chart
          releaseName: ack-iam
        selector:
          matchExpressions:
            - key: enable_ack_iam
              operator: In
              values: ['true']
  template:
    metadata:
      name: addon-{{.values.releaseName}}
    spec:
      project: default
      sources:
        - repoURL: '{{.metadata.annotations.addons_repo_url}}'
          targetRevision: '{{.metadata.annotations.addons_repo_revision}}'
          ref: values
        - chart: '{{.values.addonChart}}'
          repoURL: public.ecr.aws/aws-controllers-k8s
          targetRevision: 1.5.2
          helm:
            releaseName: '{{.values.releaseName}}'
            ignoreMissingValueFiles: true
            valueFiles:
              - $values/{{.metadata.annotations.addons_repo_basepath}}environments/default/{{.values.releaseName}}/values.yaml
              - $values/{{.metadata.annotations.addons_repo_basepath}}environments/{{.metadata.labels.environment}}/{{.values.releaseName}}/values.yaml
            valuesObject:
              aws:
                region: '{{.metadata.annotations.aws_region}}'
              nameOverride: '{{.values.releaseName}}'
              serviceAccount:
                name: '{{.metadata.annotations.ack_iam_service_account}}'
                annotations:
                  eks.amazonaws.com/role-arn: '{{.metadata.annotations.ack_iam_iam_role_arn}}'
      destination:
        name: '{{.name}}'
        namespace: '{{.metadata.annotations.ack_iam_namespace}}'
      syncPolicy:
        automated:
          prune: true
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true  # Big Ciam
